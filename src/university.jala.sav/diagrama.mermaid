classDiagram
    class BaseSortingAlgorithm {
        +List<ComparatorIndex> list
        +BaseSortingAlgorithm(List<ComparatorIndex> list)
        +sort(): void
    }

    class ComparatorIndex {
        -int value
        -String key
        +ComparatorIndex(int value, String key)
        +getValue(): int
    }

    class ConsolePrinter {
        +inverseConsolePrinter(orderingType: String, iteraciones: int, list: List<ComparatorIndex>): void
        +sortingList(iteraciones: int, list: List<ComparatorIndex>): void
        +printError(msg: String): void
        +printTypeOfArray(type: String): void
        +printSortingType(sorting: String): void
    }

    class DataVerifier {
-String algorithm
-String type
-String orderingType
-String entry
-String array
-int speed
-List<ComparatorIndex> arrayListComparator
+DataVerifier(algorithm: String, type: String, order: String, entry: String, array: String, velocity: String)
+getMinValue(): ComparatorIndex
+getMaxValue(): ComparatorIndex
+getAlgorithm(): String
+getVerifiedArray(): List<ComparatorIndex>
+getSpeed(): int
}

class RandomGenerator {
+randomCharacters(): List<ComparatorIndex>
+randomNumbers(): List<ComparatorIndex>
    }

class BubbleSort {
-String orderingType
-String speed
+BubbleSort(list: List<ComparatorIndex>, orderingType: String, speed: String)
+sort(): void
}

class InsertionSort {
-String orderingType
-String speed
+InsertionSort(list: List<ComparatorIndex>, orderingType: String, speed: String)
+sort(): void
}

class SelectionSort {
-String orderingType
-String speed
+SelectionSort(list: List<ComparatorIndex>, orderingType: String, speed: String)
+sort(): void
}

BaseSortingAlgorithm --|> ComparatorIndex
BubbleSort --|> BaseSortingAlgorithm
InsertionSort --|> BaseSortingAlgorithm
SelectionSort --|> BaseSortingAlgorithm
DataVerifier --|> ConsolePrinter
DataVerifier --|> RandomGenerator
